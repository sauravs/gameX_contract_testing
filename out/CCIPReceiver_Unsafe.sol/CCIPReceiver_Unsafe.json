{"abi":[{"type":"constructor","inputs":[{"name":"router","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"ccipReceive","inputs":[{"name":"message","type":"tuple","internalType":"struct Client.Any2EVMMessage","components":[{"name":"messageId","type":"bytes32","internalType":"bytes32"},{"name":"sourceChainSelector","type":"uint64","internalType":"uint64"},{"name":"sender","type":"bytes","internalType":"bytes"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"destTokenAmounts","type":"tuple[]","internalType":"struct Client.EVMTokenAmount[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getRouter","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"text","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"error","name":"InvalidRouter","inputs":[{"name":"router","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x60a03461008e57601f61075738819003918201601f19168301916001600160401b038311848410176100935780849260209460405283398101031261008e57516001600160a01b03811680820361008e5715610075576080526040516106ad90816100aa82396080518181816064015260d90152f35b6040516335fdcccd60e21b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610523575081631f1bd6921461042857816385572ffb14610097575063b0f479a11461005157600080fd5b34610093578160031936011261009357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b839150346100935760206003199181833601126104245780359067ffffffffffffffff938483116104205760a090833603011261041c576001600160a01b03917f0000000000000000000000000000000000000000000000000000000000000000831633036104065786519260a08401848110878211176103f35788528183013584526024938483013587811681036103eb578682015260448301358781116103eb576101499085369186010161062b565b8982015260648301358781116103eb576101689085369186010161062b565b92606082019384526084810135908882116103ef5701366023820112156103eb57848101358881116103d9578a51936101a6898360051b01866105b4565b818552878986019260061b840101923684116103d5578801915b838310610382575050505060800152519586518701968481818a0199031261037e57848101519086821161037a570187603f8201121561037e5784810151916102088361060f565b9861021582519a8b6105b4565b838a5281848401011161037a57610231929189870191016105ec565b8551938411610369575050610246835461057a565b601f8111610308575b5080601f83116001146102895750829382939261027e575b50508160011b916000199060031b1c191617815580f35b015190508380610267565b838052601f198316947f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563929185905b8782106102f05750508360019596106102d7575b505050811b01815580f35b015160001960f88460031b161c191690558380806102cc565b806001859682949686015181550195019301906102b8565b8380527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f840160051c81019183851061035f575b601f0160051c01905b818110610354575061024f565b848155600101610347565b909150819061033e565b634e487b7160e01b85526041905283fd5b8780fd5b8680fd5b8c833603126103d5578c518d81018181108d8211176103c3578e52833583811681036103bf578152838b01358b8201528152918c019189016101c0565b8d80fd5b634e487b7160e01b8e5260418a528a8efd5b8b80fd5b634e487b7160e01b8a5260418652868afd5b8880fd5b8980fd5b634e487b7160e01b885260418452602488fd5b86516335fdcccd60e21b81523381840152602490fd5b8480fd5b8580fd5b8380fd5b5050346100935781600319360112610093578051828054826104498261057a565b95868252602096879384840195600191828116908160001461050257506001146104a7575b50505061047d925003836105b4565b61049983519485938185525192838092860152858501906105ec565b601f01601f19168101030190f35b8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56395935091905b8183106104ea57508894505082010161047d388061046e565b855488840185015294850194879450918301916104d1565b9250505061047d94925060ff19168552151560051b8201018692388061046e565b849134610576576020366003190112610576573563ffffffff60e01b811680910361057657602092506385572ffb60e01b8114908115610565575b5015158152f35b6301ffc9a760e01b1490508361055e565b8280fd5b90600182811c921680156105aa575b602083101461059457565b634e487b7160e01b600052602260045260246000fd5b91607f1691610589565b90601f8019910116810190811067ffffffffffffffff8211176105d657604052565b634e487b7160e01b600052604160045260246000fd5b60005b8381106105ff5750506000910152565b81810151838201526020016105ef565b67ffffffffffffffff81116105d657601f01601f191660200190565b81601f82011215610672578035906106428261060f565b9261065060405194856105b4565b8284526020838301011161067257816000926020809301838601378301015290565b600080fdfea26469706673582212208ef26357fb264674efe3034b2ec8cfd7c8333eea4e1bb181c55c0b885f6619e864736f6c63430008130033","sourceMap":"243:271:14:-:0;;;;;;;;;;;;;-1:-1:-1;;243:271:14;;;;-1:-1:-1;;;;;243:271:14;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;243:271:14;;;;;;;542:20:0;538:58;;602:21;;243:271:14;;;;;;;;602:21:0;243:271:14;;;;;;;;;;;538:58:0;243:271:14;;-1:-1:-1;;;571:25:0;;-1:-1:-1;571:25:0;;;243:271:14;;;571:25:0;243:271:14;-1:-1:-1;243:271:14;;;;;;-1:-1:-1;243:271:14;;;;;-1:-1:-1;243:271:14","linkReferences":{}},"deployedBytecode":{"object":"0x608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610523575081631f1bd6921461042857816385572ffb14610097575063b0f479a11461005157600080fd5b34610093578160031936011261009357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b839150346100935760206003199181833601126104245780359067ffffffffffffffff938483116104205760a090833603011261041c576001600160a01b03917f0000000000000000000000000000000000000000000000000000000000000000831633036104065786519260a08401848110878211176103f35788528183013584526024938483013587811681036103eb578682015260448301358781116103eb576101499085369186010161062b565b8982015260648301358781116103eb576101689085369186010161062b565b92606082019384526084810135908882116103ef5701366023820112156103eb57848101358881116103d9578a51936101a6898360051b01866105b4565b818552878986019260061b840101923684116103d5578801915b838310610382575050505060800152519586518701968481818a0199031261037e57848101519086821161037a570187603f8201121561037e5784810151916102088361060f565b9861021582519a8b6105b4565b838a5281848401011161037a57610231929189870191016105ec565b8551938411610369575050610246835461057a565b601f8111610308575b5080601f83116001146102895750829382939261027e575b50508160011b916000199060031b1c191617815580f35b015190508380610267565b838052601f198316947f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563929185905b8782106102f05750508360019596106102d7575b505050811b01815580f35b015160001960f88460031b161c191690558380806102cc565b806001859682949686015181550195019301906102b8565b8380527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f840160051c81019183851061035f575b601f0160051c01905b818110610354575061024f565b848155600101610347565b909150819061033e565b634e487b7160e01b85526041905283fd5b8780fd5b8680fd5b8c833603126103d5578c518d81018181108d8211176103c3578e52833583811681036103bf578152838b01358b8201528152918c019189016101c0565b8d80fd5b634e487b7160e01b8e5260418a528a8efd5b8b80fd5b634e487b7160e01b8a5260418652868afd5b8880fd5b8980fd5b634e487b7160e01b885260418452602488fd5b86516335fdcccd60e21b81523381840152602490fd5b8480fd5b8580fd5b8380fd5b5050346100935781600319360112610093578051828054826104498261057a565b95868252602096879384840195600191828116908160001461050257506001146104a7575b50505061047d925003836105b4565b61049983519485938185525192838092860152858501906105ec565b601f01601f19168101030190f35b8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56395935091905b8183106104ea57508894505082010161047d388061046e565b855488840185015294850194879450918301916104d1565b9250505061047d94925060ff19168552151560051b8201018692388061046e565b849134610576576020366003190112610576573563ffffffff60e01b811680910361057657602092506385572ffb60e01b8114908115610565575b5015158152f35b6301ffc9a760e01b1490508361055e565b8280fd5b90600182811c921680156105aa575b602083101461059457565b634e487b7160e01b600052602260045260246000fd5b91607f1691610589565b90601f8019910116810190811067ffffffffffffffff8211176105d657604052565b634e487b7160e01b600052604160045260246000fd5b60005b8381106105ff5750506000910152565b81810151838201526020016105ef565b67ffffffffffffffff81116105d657601f01601f191660200190565b81601f82011215610672578035906106428261060f565b9261065060405194856105b4565b8284526020838301011161067257816000926020809301838601378301015290565b600080fdfea26469706673582212208ef26357fb264674efe3034b2ec8cfd7c8333eea4e1bb181c55c0b885f6619e864736f6c63430008130033","sourceMap":"243:271:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2285:12:0;-1:-1:-1;;;;;243:271:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;243:271:14;2285:12:0;243:271:14;;2435:10:0;:25;2431:63;;243:271:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;482:12;243:271;;;471:34;;;;;;;;243:271;;;;;471:34;;;243:271;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;243:271:14;;;;;;;;-1:-1:-1;;243:271:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;243:271:14;;;;;-1:-1:-1;;;243:271:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;243:271:14;;;;;;;;;;;;;-1:-1:-1;;;243:271:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;243:271:14;;;;;;;;2431:63:0;243:271:14;;-1:-1:-1;;;2469:25:0;;2435:10;2469:25;;;243:271:14;;;2469:25:0;243:271:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;243:271:14;;;;;;;;;;;;;;-1:-1:-1;243:271:14;;;;;;;;-1:-1:-1;243:271:14;;-1:-1:-1;;243:271:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;243:271:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;243:271:14;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1509:56:0;;;:100;;;;243:271:14;;;;;;;1509:100:0;-1:-1:-1;;;1569:40:0;;-1:-1:-1;1509:100:0;;;243:271:14;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;243:271:14;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;243:271:14;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;243:271:14;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;243:271:14;","linkReferences":{},"immutableReferences":{"14":[{"start":100,"length":32},{"start":217,"length":32}]}},"methodIdentifiers":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":"85572ffb","getRouter()":"b0f479a1","supportsInterface(bytes4)":"01ffc9a7","text()":"1f1bd692"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"text\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}},\"getRouter()\":{\"returns\":{\"_0\":\"CCIP router address\"}},\"supportsInterface(bytes4)\":{\"details\":\"Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.\",\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CCIPReceiver_Unsafe.sol\":\"CCIPReceiver_Unsafe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts-ccip/=lib/ccip/contracts/\",\":@chainlink/local/=lib/chainlink-local/\",\":@chainlink/local/src/=lib/chainlink-local/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ccip/=lib/ccip/contracts/\",\":chainlink-local/=lib/chainlink-local/src/\",\":ds-test/=lib/chainlink-local/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/ccip/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"keccak256\":\"0x547af97ff4274205ba7b79ccf9f1042ce35f0bb8ae6416d4f9dae2363bdfb6be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a31205567017596e41af5628ffa7674b7989e302dd0dfd169ee4ab5ad0d3e6ff\",\"dweb:/ipfs/QmZTeGYQMZjUiBrufLGkS2p4k4ihC4LLegPVqHeCFxnvn8\"]},\"lib/ccip/contracts/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33\",\"dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH\"]},\"lib/ccip/contracts/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0xa1ce70adec733c80b230084b425a50caa852a99f17a7e43e38a96a975f11ce88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08db3aa57ceae13832c1bf323aa29afa2620fd5b5205ff0d56152bf323c56256\",\"dweb:/ipfs/QmUG2FSVP8xXVkdgFwNhc4YFDU7FNCaf1kKShiTaaHUddE\"]},\"lib/ccip/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"src/CCIPReceiver_Unsafe.sol\":{\"keccak256\":\"0x73e6f35041eb1fc0623cf71f5519c984011d655e05d9607946c5d8159a9aab93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fe81898a8a6eb1fca9ef27eadd6be53792643599cc2f7cbf9c530926937f9f3\",\"dweb:/ipfs/QmaSKDptpsZhDdn2LNy6B9F1pyaNE5bXxJGaH4HnDYjVTC\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"router","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"router","type":"address"}],"type":"error","name":"InvalidRouter"},{"inputs":[{"internalType":"struct Client.Any2EVMMessage","name":"message","type":"tuple","components":[{"internalType":"bytes32","name":"messageId","type":"bytes32"},{"internalType":"uint64","name":"sourceChainSelector","type":"uint64"},{"internalType":"bytes","name":"sender","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"struct Client.EVMTokenAmount[]","name":"destTokenAmounts","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]}]}],"stateMutability":"nonpayable","type":"function","name":"ccipReceive"},{"inputs":[],"stateMutability":"view","type":"function","name":"getRouter","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"text","outputs":[{"internalType":"string","name":"","type":"string"}]}],"devdoc":{"kind":"dev","methods":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":{"details":"Note ensure you check the msg.sender is the OffRampRouter","params":{"message":"CCIP Message"}},"getRouter()":{"returns":{"_0":"CCIP router address"}},"supportsInterface(bytes4)":{"details":"Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.","params":{"interfaceId":"The interfaceId to check"},"returns":{"_0":"true if the interfaceId is supported"}}},"version":1},"userdoc":{"kind":"user","methods":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":{"notice":"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."},"getRouter()":{"notice":"Return the current router"},"supportsInterface(bytes4)":{"notice":"IERC165 supports an interfaceId"}},"version":1}},"settings":{"remappings":["@chainlink/contracts-ccip/=lib/ccip/contracts/","@chainlink/local/=lib/chainlink-local/","@chainlink/local/src/=lib/chainlink-local/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ccip/=lib/ccip/contracts/","chainlink-local/=lib/chainlink-local/src/","ds-test/=lib/chainlink-local/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/CCIPReceiver_Unsafe.sol":"CCIPReceiver_Unsafe"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/ccip/contracts/src/v0.8/ccip/applications/CCIPReceiver.sol":{"keccak256":"0x547af97ff4274205ba7b79ccf9f1042ce35f0bb8ae6416d4f9dae2363bdfb6be","urls":["bzz-raw://a31205567017596e41af5628ffa7674b7989e302dd0dfd169ee4ab5ad0d3e6ff","dweb:/ipfs/QmZTeGYQMZjUiBrufLGkS2p4k4ihC4LLegPVqHeCFxnvn8"],"license":"MIT"},"lib/ccip/contracts/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol":{"keccak256":"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48","urls":["bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33","dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH"],"license":"MIT"},"lib/ccip/contracts/src/v0.8/ccip/libraries/Client.sol":{"keccak256":"0xa1ce70adec733c80b230084b425a50caa852a99f17a7e43e38a96a975f11ce88","urls":["bzz-raw://08db3aa57ceae13832c1bf323aa29afa2620fd5b5205ff0d56152bf323c56256","dweb:/ipfs/QmUG2FSVP8xXVkdgFwNhc4YFDU7FNCaf1kKShiTaaHUddE"],"license":"MIT"},"lib/ccip/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol":{"keccak256":"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244","urls":["bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d","dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA"],"license":"MIT"},"src/CCIPReceiver_Unsafe.sol":{"keccak256":"0x73e6f35041eb1fc0623cf71f5519c984011d655e05d9607946c5d8159a9aab93","urls":["bzz-raw://3fe81898a8a6eb1fca9ef27eadd6be53792643599cc2f7cbf9c530926937f9f3","dweb:/ipfs/QmaSKDptpsZhDdn2LNy6B9F1pyaNE5bXxJGaH4HnDYjVTC"],"license":"MIT"}},"version":1},"id":14}